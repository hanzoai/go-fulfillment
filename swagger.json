{
  "swagger": "2.0",
  "info": {
    "title": "Fulfillment.com API",
    "description": "Welcome to our current iteration of our REST API. While we encourage you to upgrade to v2.0 we will continue support for our [SOAP API](https://github.com/fulfillment/soap-integration).\n# Versioning\nThe Fulfillment.com (FDC) REST API is version controlled and backwards compatible. We have many future APIs scheduled for publication within our v2.0 spec so please be prepared for us to add data nodes in our responses, however, we will not remove knowledge from previously published APIs.\n\n#### A Current Response\n```javascript\n{\n  id: 123\n}\n```\n\n#### A Potential Future Response\n```javascript\n{\n  id: 123,\n  reason: \"More Knowledge\"\n}\n```\n\n## Using FDC API v2.0\nAll you need to do is specify the version in the URL of your request https://api.fulfillment.com/v2\n\n# Getting Started\n1. We use OAuth v2.0 to authenticate clients, you will need to contact your account executive to obtain an OAuth `client_id` and `client_secret`.\n2. Using those auth credentials along with your `username` and `password` obtain an `access_token` and `refresh_token`\nsee [POST /oauth/access_token](#operation/generateToken).\n    + Tip: Generate an additional login and use those credentials for your integration so that changes are accredited to that \"user\".\n3. You are now ready to make requests to our other APIs by filling your `Authorization` header with `Bearer {access_token}`.\n\n## Perpetuating Access\nPerpetuating access to FDC without storing your password locally can be achieved using the `refresh_token` returned by [POST /oauth/access_token](#operation/generateToken). \nA simple concept to achieve this is outlined below.\n\n1. Your application/script will ask you for your `username` and `password`, your `client_id` and `client_secret` will be accessible via a DB or ENV.\n2. [Request an access_token](#operation/generateToken)\n    + Your function should be capable of formatting your request for both a `grant_type` of \"password\" (step 1) and \"refresh_token\" (step 4).\n3. Store the `access_token` and `refresh_token` so future requests can skip step 1\n4. When the `access_token` expires request anew using your `refresh_token`, replace both tokens in local storage.\n    + If this fails you will have to revert to step 1.\n\nAlternatively if you choose for your application/script to have access to your `username` and `password` you can skip step 4.\n\nIn all scenarios we recommend storing all credentials outside your codebase.\n\n## Date Time Definitions\nWe will report all date-time stamps using the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) standard. When using listing API's where fromDate and toDate are available note that both dates are inclusive while requiring the fromDate to be before or at the toDate.\n\n### The Fulfillment Process\nMany steps are required to fulfill your order we report back to you three fundamental milestones inside the orders model.\n* `recordedOn` When we received your order. This will never change.\n* `dispatchDate` When the current iteration of your order was scheduled for fulfillment. This may change however it is an indicator that the physical process of fulfillment has begun and a tracking number has been **assigned** to your order. The tracking number **MAY CHANGE**. You will not be able to cancel an order once it has been dispatched. If you need to recall an order that has been dispatched please contact your account executive.\n* `departDate` When we recorded your order passing our final inspection and placed with the carrier. At this point it is **safe to inform the consignee** of the tracking number as it will not change.\n\n## Evaluating Error Responses\nWe currently return two different error models, with and without context. All errors will include a `message` node while errors with `context` will include additional information designed to save you time when encountering highly probable errors. For example, when you send us a request to create a duplicate order, we will reject your request and the context will include the FDC order `id` so that you may record it for your records.\n\n### Without Context\nNew order with missing required fields.\n\n| Header | Response |\n| ------ | -------- |\n| Status | `400 Bad Request` |\n\n```javascript\n{\n    \"message\": \"Invalid request body\"\n}\n```\n\n### With Context\nNew order with duplicate `merchantOrderId`.\n\n| Header | Response |\n| ------ | -------- |\n| Status | `409 Conflict` |\n\n```javascript\n{\n    \"message\": \"Duplicate Order\",\n    \"context\": {\n        \"id\": 123\n    }\n}\n```\n\n## Status Codes\nCodes are a concatenation of State, Stage, and Detail.\n\n`^[0-9]{2}[0-9]{2}[0-9]{2}$`\n\n| Code | State              | Stage    | Detail         |\n| ---- | ------------------ | -------- | -------------- |\n| 010101 | Processing Order | Recieved | Customer Order |\n| 010102 | Processing Order | Recieved | Recieved |\n| 010201 | Processing Order | Approved |  |\n| 010301 | Processing Order | Hold | Merchant Stock |\n| 010302 | Processing Order | Hold | Merchant Funds |\n| 010303 | Processing Order | Hold | For Merchant |\n| 010401 | Processing Order | Address Problem | Incomplete Address |\n| 010501 | Processing Order | Sku Problem | Invalid SKU |\n| 010601 | Processing Order | Facility Problem | Facility Not Mapped |\n| 010402 | Processing Order | Address Problem | Invalid Locality |\n| 010403 | Processing Order | Address Problem | Invalid Region |\n| 010404 | Processing Order | Address Problem | Address Not Found |\n| 010405 | Processing Order | Address Problem | Many Addresses Found |\n| 010406 | Processing Order | Address Problem | Invalid Postal Code |\n| 010407 | Processing Order | Address Problem | Country Not Mapped |\n| 010408 | Processing Order | Address Problem | Invalid Recipient Name |\n| 010701 | Processing Order | Ship Method Problem | Unmapped Ship Method |\n| 010702 | Processing Order | Ship Method Problem | Unmapped Ship Cost |\n| 010409 | Processing Order | Address Problem | Bad UK Address |\n| 010410 | Processing Order | Address Problem | Invalid Address Line 1 or 2 |\n| 010703 | Processing Order | Ship Method Problem | Missing Ship Method |\n| 010704 | Processing Order | Ship Method Problem | Invalid Ship Method |\n| 010801 | Processing Order | Inventory Problem | Insufficient Inventory In Facility |\n| 010705 | Processing Order | Ship Method Problem | Order Weight Outside of Ship Method Weight |\n| 010501 | Processing Order | Sku Problem | Child Order has Invalid SKUs |\n| 010304 | Processing Order | Hold | Oversized Shipment |\n| 010305 | Processing Order | Hold | Invalid Parent Order |\n| 010306 | Processing Order | Hold | Invalid Address |\n| 010307 | Processing Order | Hold | By Admin |\n| 010802 | Processing Order | Inventory Problem | Issue Encountered During Inventory Adjustment |\n| 010901 | Processing Order | Released To WMS | Released |\n| 020401 | Fulfillment In Progress | 4PL Processing |\n| 020101 | Fulfillment In Progress | Postage Problem | Address Issue |\n| 020102 | Fulfillment In Progress | Postage Problem | Postage OK, OMS Issue Occurred |\n| 020501 | Fulfillment In Progress | 4PL Problem | Order is Proccessable, Postage Issue Occurred |\n| 020201 | Fulfillment In Progress | Postage Acquired | |\n| 020103 | Fulfillment In Progress | Postage Problem | Postage Void Failed |\n| 020301 | Fulfillment In Progress | Postage Voided | Postage Void Failed Gracefully |\n| 020601 | Fulfillment In Progress | Label Printed | |\n| 020701 | Fulfillment In Progress | Shipment Cubed | |\n| 020801 | Fulfillment In Progress | Picking Inventory | |\n| 020901 | Fulfillment In Progress | Label Print Verified | |\n| 021001 | Fulfillment In Progress | Passed Final Inspection | |\n| 020301 | Fulfillment In Progress | Hold | Departure Hold Requested |\n| 030101 | Shipped | Fulfilled By 4PL | |\n| 030102 | Shipped | Fulfilled By 4PL | Successfully Fulfilled, OMS Encountered Issue During Processing |\n| 030201 | Shipped | Fulfilled By FDC | |\n| 040101 | Returned | Returned | |\n| 050101 | Cancelled | Cancelled | |\n| 060101 | Test | Test | Test |\n",
    "x-logo": {
      "url": "https://fulfillment.github.io/api/FDC_API_144x144.png"
    },
    "termsOfService": "https://fulfillment.github.io/api/terms/",
    "contact": {
      "email": "dev@fulfillment.com"
    },
    "version": "2.0"
  },
  "host": "api.fulfillment.com",
  "basePath": "/v2",
  "tags": [
    {
      "name": "auth",
      "description": "Please note that in keeping with the OAuth standard, parameters are underscored however all other API parameters are camelCase."
    },
    {
      "name": "orders",
      "description": "Creating, viewing, and canceling orders."
    }
  ],
  "x-tagGroups": [
    {
      "name": "Support",
      "tags": [
        "auth"
      ]
    },
    {
      "name": "Order Management",
      "tags": [
        "orders",
        "Partners"
      ]
    }
  ],
  "parameters": {
    "authHeader": {
      "name": "Authorization",
      "in": "header",
      "description": "OAuth 2.0 Bearer Access Token",
      "required": true,
      "type": "string"
    },
    "fromDateParam": {
      "name": "fromDate",
      "in": "query",
      "description": "Date-time in ISO 8601 format for selecting orders after, or at, the specified time",
      "required": true,
      "type": "string"
    },
    "toDateParam": {
      "name": "toDate",
      "in": "query",
      "description": "Date-time in ISO 8601 format for selecting orders before, or at, the specified time",
      "required": true,
      "type": "string"
    },
    "pageParam": {
      "name": "page",
      "in": "query",
      "required": false,
      "type": "integer",
      "minimum": 1,
      "default": 1,
      "description": "A multiplier of the number of items (limit paramater) to skip before returning results"
    },
    "limitParam": {
      "name": "limit",
      "in": "query",
      "required": false,
      "type": "integer",
      "minimum": 1,
      "maximum": 200,
      "default": 80,
      "description": "The numbers of items to return"
    },
    "merchantParam": {
      "name": "merchantIds",
      "in": "query",
      "required": false,
      "type": "array",
      "collectionFormat": "csv",
      "items": {
        "type": "integer"
      },
      "description": "A CSV of merchant id, '123' or '1,2,3'"
    },
    "warehouseParam": {
      "name": "warehouseIds",
      "in": "query",
      "required": false,
      "type": "array",
      "items": {
        "type": "integer"
      },
      "collectionFormat": "csv",
      "description": "A CSV of warehouse id, '123' or '1,2,3'"
    }
  },
  "paths": {
    "/oauth/access_token": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Generate an Access Token",
        "operationId": "generateToken",
        "description": "By default tokens are valid for 7 days while refresh tokens are valid for 30 days. If your `grant_type` is \"password\" include the `username` and `password`, if however your `grant_type` is \"refresh_token\" the username/password are not required, instead set the `refresh_token`",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Get an access token",
            "required": true,
            "schema": {
              "$ref": "#/definitions/accessTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Authorized",
            "schema": {
              "$ref": "#/definitions/accessTokenResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/standardError"
            }
          }
        }
      }
    },
    "/orders": {
      "post": {
        "tags": [
          "orders"
        ],
        "summary": "New Order",
        "description": "Error Notes&#58;\n* When `409 Conflict` is a 'Duplicate Order' the `context` will include the FDC `id`, see samples.\n",
        "operationId": "createOrder",
        "parameters": [
          {
            "$ref": "#/parameters/authHeader"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The order to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/newOrder"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Order Created",
            "schema": {
              "$ref": "#/definitions/order"
            }
          },
          "400": {
            "description": "Invalid order object",
            "schema": {
              "$ref": "#/definitions/standardError"
            }
          },
          "401": {
            "description": "You do not have permission to create orders"
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/standardErrorWithContext"
            },
            "examples": {
              "application/json": {
                "message": "Duplicate Order",
                "context": {
                  "id": 123
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "List of Orders",
        "description": "Retrieve many orders at once",
        "operationId": "getOrders",
        "parameters": [
          {
            "$ref": "#/parameters/authHeader"
          },
          {
            "$ref": "#/parameters/fromDateParam"
          },
          {
            "$ref": "#/parameters/toDateParam"
          },
          {
            "$ref": "#/parameters/merchantParam"
          },
          {
            "$ref": "#/parameters/warehouseParam"
          },
          {
            "$ref": "#/parameters/pageParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Found Orders",
            "schema": {
              "$ref": "#/definitions/ordersArray"
            }
          },
          "404": {
            "description": "No Orders Found",
            "schema": {
              "$ref": "#/definitions/standardError"
            }
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Order Details",
        "description": "For the fastest results use the FDC provided `id` however you can use your `merchantOrderId` as the `id`.",
        "operationId": "getOrder",
        "parameters": [
          {
            "$ref": "#/parameters/authHeader"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The FDC order Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "merchantId",
            "in": "query",
            "description": "Providing your `merchantId` indicates the `id` is your `merchantOrderId`. Although it is not necessary to provide this it will speed up your results when using your `merchantOrderId` however it will slow your results when using the FDC provided `id`",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Order Found",
            "schema": {
              "$ref": "#/definitions/order"
            }
          },
          "404": {
            "description": "Order not found"
          }
        }
      },
      "delete": {
        "tags": [
          "orders"
        ],
        "summary": "Cancel an Order",
        "operationId": "cancelOrder",
        "parameters": [
          {
            "$ref": "#/parameters/authHeader"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of order that needs to be canceled",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Your order was successfully canceled",
            "schema": {
              "$ref": "#/definitions/order"
            }
          },
          "404": {
            "description": "Order not found"
          },
          "405": {
            "description": "Could not cancel your order, perhaps it already shipped",
            "schema": {
              "$ref": "#/definitions/standardError"
            }
          }
        }
      }
    },
    "/orders/{id}/ship": {
      "put": {
        "tags": [
          "Partners"
        ],
        "summary": "Ship an Order",
        "description": "Note, this API is used to update orders and is reserved for our shipping partners.",
        "operationId": "orderShip",
        "parameters": [
          {
            "$ref": "#/parameters/authHeader"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The FDC order Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Shipping Details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/orderShip"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order Found",
            "schema": {
              "$ref": "#/definitions/order"
            }
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    },
    "/orders/{id}/status": {
      "put": {
        "tags": [
          "Partners"
        ],
        "summary": "Update Order Status",
        "description": "Note, this API is used to update orders and is reserved for our shipping partners.",
        "parameters": [
          {
            "$ref": "#/parameters/authHeader"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The FDC order Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "description": "New status event",
            "required": true,
            "schema": {
              "$ref": "#/definitions/statusTypeSimple"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order Found",
            "schema": {
              "$ref": "#/definitions/order"
            }
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    }
  },
  "definitions": {
    "accessTokenRequest": {
      "properties": {
        "client_id": {
          "description": "Id and secret provided by FDC",
          "type": "string"
        },
        "client_secret": {
          "type": "string"
        },
        "grant_type": {
          "description": "Indicates how you're authenticating your request, see `username`, `password`, and `refresh_token` below",
          "type": "string",
          "enum": [
            "password",
            "refresh_token"
          ]
        },
        "scope": {
          "description": "Currently limited to Order Management System",
          "type": "string",
          "enum": [
            "oms"
          ],
          "default": "oms"
        },
        "username": {
          "description": "Required along with `password` if not \"refreshing\" the token",
          "type": "string"
        },
        "password": {
          "description": "See above",
          "type": "string"
        },
        "refresh_token": {
          "description": "You may request future tokens with the `refresh_token` from your previous `/oauth/access_token` request",
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "client_id",
        "client_secret",
        "grant_type",
        "scope"
      ]
    },
    "accessTokenResponse": {
      "properties": {
        "access_token": {
          "type": "string"
        },
        "token_type": {
          "type": "string",
          "default": "Bearer"
        },
        "expires_in": {
          "type": "integer",
          "default": 604800
        },
        "refresh_token": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "consignee": {
      "required": [
        "id",
        "firstName",
        "lastName",
        "address1",
        "addressLocality",
        "addressRegion",
        "postalCode",
        "country"
      ],
      "properties": {
        "id": {
          "type": "integer"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "addressLocality": {
          "description": "City",
          "type": "string"
        },
        "addressRegion": {
          "description": "Province / State",
          "type": "string"
        },
        "postalCode": {
          "description": "Postal Code / Zip",
          "type": "string"
        },
        "country": {
          "description": "Ideally provide the two character ISO code",
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "iso": {
          "$ref": "#/definitions/isoCountry"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedBy": {
          "$ref": "#/definitions/user"
        }
      },
      "type": "object"
    },
    "isoCountry": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "description": "Country Name",
          "type": "string"
        },
        "iso2": {
          "description": "Two character ISO code",
          "type": "string",
          "pattern": "[A-Z]{2}",
          "minimum": 2,
          "maximum": 2
        }
      },
      "type": "object"
    },
    "merchant": {
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "description": "Merchant Company Name",
          "type": "string"
        }
      },
      "type": "object"
    },
    "newContactInfo": {
      "required": [
        "firstName",
        "lastName",
        "email",
        "phone",
        "address1",
        "addressLocality",
        "addressRegion",
        "country"
      ],
      "properties": {
        "email": {
          "description": "Email, required for international shipments",
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "phone": {
          "description": "Phone number, required for international shipments",
          "type": "string"
        },
        "address1": {
          "description": "Address Line 1",
          "type": "string"
        },
        "address2": {
          "description": "Address Line 2",
          "type": "string"
        },
        "addressLocality": {
          "description": "City",
          "type": "string"
        },
        "addressRegion": {
          "description": "Province / State",
          "type": "string"
        },
        "postalCode": {
          "description": "Postal Code / Zip",
          "type": "string"
        },
        "country": {
          "description": "Country, for best results please provide the two character ISO code",
          "type": "string"
        },
        "companyName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "newOrder": {
      "required": [
        "merchantOrderId",
        "items",
        "recipient",
        "shippingMethod"
      ],
      "properties": {
        "merchantId": {
          "description": "Necessary if you have a multitenancy account, otherwise we will associate the order with your account",
          "type": "integer"
        },
        "merchantOrderId": {
          "description": "Unique ID provided by the merchant",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/newOrderItem"
          }
        },
        "recipient": {
          "$ref": "#/definitions/newContactInfo"
        },
        "shippingMethod": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "integrator": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "newOrderItem": {
      "required": [
        "sku",
        "declaredValue",
        "quantity"
      ],
      "properties": {
        "quantity": {
          "type": "integer",
          "minimum": 1
        },
        "sku": {
          "type": "string"
        },
        "declaredValue": {
          "description": "Using USD, a per unit value of a single SKU. If your declaring a kit this is the sum total for a single kit. In both scenarios we will multiply the `declaredValue` against the `quantity` for customs declaration.",
          "type": "number",
          "format": "double"
        }
      },
      "type": "object"
    },
    "order": {
      "required": [
        "id",
        "merchantOrderId",
        "merchantShippingMethod",
        "recordedOn",
        "merchant",
        "currentStatus",
        "originalConsignee",
        "validatedConsignee"
      ],
      "properties": {
        "id": {
          "description": "FDC ID for this order",
          "type": "integer"
        },
        "parentOrder": {
          "properties": {
            "id": {
              "description": "Reference to parent `id` if order was grouped",
              "type": "integer"
            }
          },
          "type": "object"
        },
        "merchantOrderId": {
          "description": "Merchant provided ID",
          "type": "string"
        },
        "purchaseOrderNum": {
          "description": "Merchant provided PO#",
          "type": "string"
        },
        "merchantShippingMethod": {
          "description": "Requested ship method",
          "type": "string"
        },
        "recordedOn": {
          "description": "DateTime order was recorded by FDC",
          "type": "string",
          "format": "date-time"
        },
        "dispatchDate": {
          "description": "DateTime order was dispatched for fulfillment by FDC",
          "type": "string",
          "format": "date-time"
        },
        "departDate": {
          "description": "DateTime order departed an FDC warehouse",
          "type": "string",
          "format": "date-time"
        },
        "merchant": {
          "$ref": "#/definitions/merchant"
        },
        "warehouse": {
          "$ref": "#/definitions/warehouse"
        },
        "currentStatus": {
          "$ref": "#/definitions/statusEvent"
        },
        "originalConsignee": {
          "$ref": "#/definitions/consignee"
        },
        "validatedConsignee": {
          "$ref": "#/definitions/consignee"
        },
        "trackingNumbers": {
          "items": {
            "$ref": "#/definitions/trackingNumber"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ordersArray": {
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/order"
          }
        },
        "pagination": {
          "$ref": "#/definitions/pagination"
        }
      },
      "type": "object"
    },
    "orderShip": {
      "properties": {
        "trackingNumber": {
          "description": "Tracking number of package",
          "type": "string"
        },
        "weightOverride": {
          "description": "Override predicted weight of package",
          "type": "number",
          "format": "float"
        }
      },
      "type": "object"
    },
    "pagination": {
      "type": "object",
      "properties": {
        "total": {
          "description": "Total number of records available to request",
          "type": "integer"
        },
        "count": {
          "description": "Count of records returned in response, this will be equal to or less then the limit paramater",
          "type": "integer"
        },
        "currentPage": {
          "description": "Current page of the response, this will match the page paramater",
          "type": "integer"
        },
        "totalPages": {
          "description": "Total number of pages available to request",
          "type": "integer"
        }
      }
    },
    "standardError": {
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "standardErrorWithContext": {
      "properties": {
        "message": {
          "type": "string"
        },
        "context": {
          "items": {},
          "type": "array"
        }
      },
      "type": "object"
    },
    "statusEvent": {
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer"
        },
        "date": {
          "description": "DateTime of Status Event",
          "type": "string",
          "format": "date-time"
        },
        "reason": {
          "description": "Explanation for status",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/statusType"
        },
        "createdBy": {
          "$ref": "#/definitions/user"
        }
      },
      "type": "object"
    },
    "statusType": {
      "type": "object",
      "required": [
        "code",
        "detailCode",
        "stage",
        "state"
      ],
      "properties": {
        "id": {
          "description": "Depricated, use code instead",
          "type": "integer"
        },
        "code": {
          "description": "Code, see [status codes](#section/Getting-Started/Status-Codes)",
          "type": "string",
          "pattern": "^\\d{6}$"
        },
        "detailCode": {
          "type": "string",
          "pattern": "^\\d{2}$"
        },
        "name": {
          "description": "Depricated, use stage/state instead",
          "type": "string"
        },
        "reason": {
          "description": "Depricated",
          "type": "string"
        },
        "detail": {
          "type": "string"
        },
        "state": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "code": {
              "type": "string"
            }
          }
        },
        "stage": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "code": {
              "type": "string"
            }
          }
        },
        "actionRequiredBy": {
          "description": "Responsibility for resolving this issue",
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string",
              "description": "Human readable description of responsible party to resolve the issue"
            }
          }
        },
        "isClosed": {
          "description": "Depricated, does this status event close the order",
          "type": "boolean"
        }
      }
    },
    "statusTypeSimple": {
      "required": [
        "status",
        "reason"
      ],
      "properties": {
        "status": {
          "type": "object",
          "required": [
            "code"
          ],
          "properties": {
            "code": {
              "type": "string",
              "pattern": "^\\d{6}$"
            }
          }
        },
        "reason": {
          "description": "Human-readable description",
          "type": "string"
        }
      },
      "type": "object"
    },
    "trackingNumber": {
      "properties": {
        "value": {
          "description": "The human readable tracking number recipients (consignee) expect",
          "type": "string"
        },
        "barcodeScanValue": {
          "description": "The computer readable alternative to the human readable",
          "type": "string"
        },
        "carrier": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "user": {
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "warehouse": {
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer"
        }
      },
      "type": "object"
    }
  }
}
