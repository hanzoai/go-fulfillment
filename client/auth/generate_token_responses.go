// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "go-fulfillment/models"
)

// GenerateTokenReader is a Reader for the GenerateToken structure.
type GenerateTokenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GenerateTokenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGenerateTokenOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGenerateTokenUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGenerateTokenOK creates a GenerateTokenOK with default headers values
func NewGenerateTokenOK() *GenerateTokenOK {
	return &GenerateTokenOK{}
}

/*GenerateTokenOK handles this case with default header values.

Authorized
*/
type GenerateTokenOK struct {
	Payload *models.AccessTokenResponse
}

func (o *GenerateTokenOK) Error() string {
	return fmt.Sprintf("[POST /oauth/access_token][%d] generateTokenOK  %+v", 200, o.Payload)
}

func (o *GenerateTokenOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccessTokenResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGenerateTokenUnauthorized creates a GenerateTokenUnauthorized with default headers values
func NewGenerateTokenUnauthorized() *GenerateTokenUnauthorized {
	return &GenerateTokenUnauthorized{}
}

/*GenerateTokenUnauthorized handles this case with default header values.

Unauthorized
*/
type GenerateTokenUnauthorized struct {
	Payload *models.StandardError
}

func (o *GenerateTokenUnauthorized) Error() string {
	return fmt.Sprintf("[POST /oauth/access_token][%d] generateTokenUnauthorized  %+v", 401, o.Payload)
}

func (o *GenerateTokenUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StandardError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
